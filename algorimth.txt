1)what is heuristic in AI (andaza or anuman)
  give good solution but may be optimal solution

2)best first search (informed,heuristic)
  hum us path pr drive karenge jis ki heuristic value(cost) km hoga other path pr nhi jayega
3)Beam search algorithm
  1)take care of space complexity(constant)
  2)beam width(áºž) is given
  
  
7 algorithms and data structures every programmer must know =====>>>>>>>>>
1. Sort Algorithms
    Merge Sort
	Quick Sort
	Bucket Sort
	Heap Sort
	Counting Sort 
2. Search Algorithms
  	Depth/Breadth First Search (in Graph data structures) or dfs/bfs
	Used by search engines for web-crawling
	Used in artificial intelligence to build bots, for instance a chess bot
	Finding shortest path between two cities in a map and many other such applications
3. Hashing
	In routers, to store IP address -> Path pair for routing mechanisms
    To perform the check if a value already exists in a list. Linear search would be expensive. We can also use Set data structure for this operation.	
4. Dynamic Programming
	Dynamic programming (DP) is a method for solving a complex problem by breaking it down into simpler subproblems. We solve the subproblems, remember their results and using them we make our way to solve the complex problem, quickly.
5. Exponentiation by squaring
	Say you want to calculate 232. Normally we’d iterate 32 times and find the result. What if I told you it can be done in 5 iterations?

	Exponentiation by squaring or Binary exponentiation is a general method for fast computation of large positive integer powers of a number in O(log2N). Not only this, the method is also used for computation of powers of polynomials and square matrices.
6. String Matching and Parsing
	Pattern matching/searching is one of the most important problem in Computer Science. There have been a lot of research on the topic but we’ll enlist only two basic necessities for any programmer.

	KMP Algorithm (String Matching)

	Knuth-Morris-Pratt algorithm is used in cases where we have to match a short pattern in a long string. For instance, when we Ctrl+F a keyword in a document, we perform pattern matching in the whole document.

	Regular Expression (String Parsing)

	Many a times we have to validate a string by parsing over a predefined restriction. It is heavily used in web development for URL parsing and matching.

7. Primality Testing Algorithms
   There are deterministic and probabilistic ways of determining whether a given number is prime or not. We’ll see both deterministic and probabilistic (nondeterministic) ways.

   Sieve of Eratosthenes (deterministic)

	If we have certain limit on the range of numbers, say determine all primes within range 100 to 1000 then Sieve is a way to go. The length of range is a crucial factor, because we have to allocate certain amount of memory according to range.

	For any number n, incrementally testing upto sqrt(n) (deterministic)

	In case you want to check for few numbers which are sparsely spread over a long range (say 1 to 1012), Sieve won’t be able to allocate enough memory. You can check for each number n by traversing only upto sqrt(n) and perform a divisibility check on n.

	Fermat primality test and Miller–Rabin primality test (both are nondeterministic)

	Both of these are compositeness tests. If a number is proved to be composite, then it sure isn’t a prime number. Miller-Rabin is a more sophisticated one than Fermat’s. Infact, Miller-Rabin also has a deterministic variant, but then its a game of trade between time complexity and accuracy of the algorithm.

	Application:

	The single most important use of prime numbers is in Cryptography. More precisely, they are used in encryption and decryption in RSA algorithm which was the very first implementation of Public Key Cryptosystems
	Another use is in Hash functions used in Hash Tables 