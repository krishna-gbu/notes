docker=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker ce (community edition) not support in rhel 8 (but some trick)
curl -sSl https://get.docker.com |sh (to downlaod docker with docker shell script )
downlaod.docker.com ->get docker19 version

make repo++++++++++++++>>>>>>>>>>>>>>>>
cd /etc/yum.repos.d 
ls
gedit docker.repo(make dir)
[docker]
copy docker location(basurl:https://downlaod.docker.com/linux/centos/7/x86_64/stable/)
gpgcheck=0
install docker =>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>..........
yum install docker-ce --nobest

check history

install ubuntu in docker =>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker pull ubuntu(latest version)
docker pull ubuntu:14.04(specific version)
check os install in docker =>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker images
and check process
docker ps

open docke os =>>>>>>>>>>>>>>>>>>>>>>>
docker run -t -i ubuntu:14.04 (ye har bar new os open krta hai jis se ki hum purana data nhi dekhta hai)


shutdown docker os =>>>>>>>>>>>>>>>>>>>>>>>>>
exit
docker stop -t(time) container_id(check from docker ps)

check docker service
systemctl status  docker
system enable/disable docker
docker info


install ------>os(boot) (provision) 1) base metal
                            2)cloude computing
                            3)virtualization
                            4) docker

          NOte:-os means container in docker


++++++++++++++=== by sir========================++++++++++++++++++++++++++++++++++++++++++++++

Docker command line syntax:
Old: docker <command> options
New: docker <management command> <command> options

Default image registry for docker is hub.docker.com

List docker images:
old # docker images
new # docker image ls

Start Container from docker image centos :
old # docker run -it centos
new # docker container run -it centos

Check list of running containers:
old # docker ps
new # docker container ps  or # docker container ls


+++++++++++++++++++++++++++==
with name docker
docker run -ti --name krish centos:7

rpm query==============
rpm -q name


hwo to open old os =>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
docker run -ti os (har bar new os lanuch krta hai) =>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
run  old os =>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker start os_id (show in terminal root@id) ya docker ps se check kr lo
docker attach os_id
docker ps -a(check all os)
docker rm os_id

remove image=>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker rmi centos:latest (remove image)
docker rmi centos:latest -f 

docker version (docker version check)
if docker not lanuch =>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
getenforce (if output enforcing)
setenforce 0  



container =>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker container run -it --name os2 centos:7
docker container stop os2
docker container --help
docker container ls -a 
ctrl+p+q (deattach to os)

clone / copy of docker image(create own image)
docker commit myso1 myos2


apache web server=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker run -it --name web centos:7
docker inspect web(os)(all information of os)
docker info 


session2=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker info(all information)
web server in centos in docker=>>>>>>>>>>>>>>>>>>>>>>>>
docker image ls
docker container run -ti --name web(os) contos:7
lscpu(cpu information)
docker container inspect --format "{{.NetworkSetting.IPAddress}}" web (IPAddress is inside of NetworkSetting )
yum install net-tools (install in centos for ifconfig)
rpm -q httpd(check httpd install or not)
yum install httpd
cd /var/www/html/ (which web page host put in it)
systemctl start httpd(docker is not support but some trick)
    Note:-systemctl stop httpd
          /usr/sbin/httpd(systemctl command es file ko hi excute krte hai to hum ne manual kr  deya)
          netstat -tnlp(check port etc)
          killall httpd(for stop)
/usr/sbin/httpd (centos me systemctl command kam nhi kr rahi hai to )
vi /root/.bashrc(hr bar jb os restart hota hai to service shutdown ho jate hai to hum es me /usr/sbin/httpd add krta hai)
cd /var/run/httpd(run me sari running process hota hai with pid)
Note:-systemctl start httpd (es se ye start hota hai /usr/sbin/httpd aur es se process and httpd.pid file create hote hai)
      systemctl stop  httpd(es se killall httpd and remove hote hai httpd.pid)
      pr /urs/sbin/httpd se sirf process start hota hai httpd.pid nhi
Note:- jb system restart hota hai to httpd ki cache hote hai to hum ko remove krna hota hai
       to hum use krte hai /root/.bashrc file me 
       rm -rf  /var/run/httpd/*
       /usr/sbin/httpd
       ye permanent solution hai
Note:-agar hum jis os me webserver setup kiye hai uska clone kr de to hume ek website ki liye kae ip mil jaye ge 

hwo to share docker os or import and export (1 method):-===>>>>>>>>>>>>>>>>>>>>>>>
docker save webserver:v1 -o web.tar (first create *.tar file )(export)
scp web.tar root@192.43.34.34/root (share file with scp)
docker load -i web.tar (import file)
(2-method(public)) =>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1)upload image on docker hub
2)first create account 
Note:-docker pull -ti ubuntu:14.04(agar local repo me nhi hai to hub.docker se tumhare local repo me dalega than run)
docker login(terminal)
docker push username/webserver:v1(upload the image on hub.docker)
docker tag webserver:v1  krish/webserver:v1(rename the image)
(3-method(private))=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

session3=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

docker logs -f os(container_name)(check status of running image from baseos)
docker attach os (if docker is background and attach with)
ansible(tool for automation)
docker exec os(container) date  ( os me ja kr date command run hoge phir wapis)
docker exec -it  os date (es me bhi excute hoga pr os open hoker khula rahiga aur exit krni pr os close nhi hoga background me running hoga)

Networking=>>>>>>>>>>>>>>>>>>>
ifconfig 
route -n
docker container run -it -d --name fuck centos:v1(-d se background me ho jata hai)
docker network ls(check network type(bridge,host,none))
docker network inspect bridge
cat /etc/reslov.conf(this is dns(server))
dhcp -> ipam(type of database ip address management)
bridge(software)-work as layer2 and layer3 both(osi model)
switch/bridge(for software) -layer2
router - layer3
in docker bridge(switch+router)

setup network:=>>>>>>>>>>>>>>>>>>>>>
docker network ls
docker network create --help
docker network create --driver bridge net1(any_name)
docker network inspect net1
docker run -dit --name c8 --network net1  centos:7(hum ne centos ko apni net1 se connect kiya hai)
ping container(os(centos))
Note:- agar do network bridge hai switch se to, wo apas me bhi connect ho jate hai
docker container run -ti --link c1 --name c10 mycentos:v1(hum ne c1 aur c10 ko apas me connect kr diya hai jo ki bridge network me hai dono)
docker run -it --network none --name c1 mycentos:v1(es me net connect nhi hai )
docker network disconnect net1 mycentos:v1(mycentos ko disconnect kr diya hum ne)
docker network  connect net1 mycentos:v1(mycentos ko connect kr diya hum ne)
docker run -it --name web1 --network-alias site --network webnet phpweb:v1(image)
docker run -it --name web2 --network-alias site --network webnet phpweb:v1
Note:-(--network-alias ,hum jitni os lanuch krenge utni ip hoge aur name bhi 
       to hum apni site ko kaise host krenge ,to --network-alias se hum sabhi ko ek kr dete hai 
      ,to hum sirf site search krna hoga)
yum install bind-utils (for nslookup)  
nslookup web1(check ip and name)
nslookup web2(check ip and name)



session4=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

why docker is fast 
hyperversion=>virtualization
rpm -q kernel
uname -r
baser_os -->container(docker_engine)-->docker_os
lscpu
ps -aux (check process)
docker network ls
ip =>>>>>>>>>>>
   1)private
   2)public 

private  ----x------public
public -------x ------private
public----------------public
private--------------private
hwo it possible the above condition

router convert private ip to public ip and public to private ip this call
nat(network address transmission) 
snat (source network address transmission)
dnat (destination network address transmission)-->pat(port address transmission)
nat connection => only router and snat enable feature
bridge connection=>>switch and router and snat enable feature
how to connect private to public with pat(port address transmission)=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker container run -it -p(pat) 1234:80(router_port:container_port)  --name 0s2 --network net2(bridge) webserver
Note:-(disable firewalld)
Note:-host network es me base ip container ko milega network card bhi (same as base os)
docker container run -it --network host webserver:v1
Note:- disable firewalld

session5=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
docker images
docker inspect webserver
router -n (check gateway)
sysctl -a | grep ip_forward(all network feature )
iptables -vLn(check rule)
docker inspect webserver:v1 |grep IP
iptables  -P   FORWARD ACCEPT (CHANGE  iptables policy)
netstat -tnlp
storage=vloume=======>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1)persistence(like pendrive storage)
2)empheral (temporary)
alias dps='docker ps'(alias any_name='any command') not permanent if use permanent bashrc
docker volume
docker volume create --help
docker volume create myst1 (pendrive)
docker volume ls
hwo to connect pendrive to os(container)======>>>>>>>>>>>>>>>>>>>
docker run -ti --name web -v myst1 ubuntu:14.04
dockr run -it --name web -v myst1:/var/www/html webserver:v1
docker rm -f web
dockr run -it --name web1 -v myst1:/var/www/html webserver:v1
cd /var/www/html/
ls
docker volume inspect myst1
cd /var/lib/docker/volumes
cd myst1
cd _data/
yum repolist
create:====>>>>>>>>>repo>>>>>>>>>>>>>
[name]
baseurl=file:///location/folder
gpgcheck=0
dockr run -it --name web1 -v  /rhel8:/dvd centos:7(rhel folder attach with docker os)

session6=>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

docker pull  -it  wordpress (for site)
docker pull -ti mysql:5.7 (for db)
                         its call multi-tier
exp:-
    x=5(in rhel8(base_system))
    docker run -e x=$x -ti centos
    echo $x    //output = 5

docker run -e x=$x -it centos:7
echo $x 
docker run -e myname=krish -it centos:7


which mysql (in base system)   
yum install mysql(in base system)

mysql)(base system) -h 172.17.0.2(mysql in docker) -u root -predhat(p-password redhat)
docker history mysql:5.7(container)

docker run -it -e MYSQL_ROOT_PASSWORD,=pass ,MYSQL_ALLOW_EMPTY
Docker RUN -T e MYSQ MAN

docker run -dit -e MYSQL_ROOT_PASSWORD=redhat -e MYSQL_USER=vimal 
 -e MYSQL_PASSWORD=redhat -e MYSQL_DATABASE=mydb 
 -v mysql_storage:/var/lib/mysql --name dbos   mysql:5.7 

docker rm -f  $(docker ps -q)(remove query)

docker history os(container)

docker run -dit -e WORDPRESS_DB_HOST=dbos  -e WORDPRESS_DB_USER=vimal 
-e WORDPRESS_DB_PASSWORD=redhat -e WORDPRESS_DB_NAME=mydb -v wp_storage:/var/www/html 
--name wpos1 -p 8080:80 --link dbos   wordpress:5.1.1-php7.3-apache 

Note:- !536 (history no line run )








